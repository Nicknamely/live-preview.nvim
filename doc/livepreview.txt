*livepreview.txt*                                                *livepreview*

==============================================================================
Table of Contents                              *livepreview-table-of-contents*

1. Introduction                                     |livepreview-introduction|
2. Features                                             |livepreview-features|
3. Requirements                                     |livepreview-requirements|
4. Installation                                     |livepreview-installation|
5. Setup                                                   |livepreview-setup|
  - In Lua                                          |livepreview-setup-in-lua|
  - In Vimscript                              |livepreview-setup-in-vimscript|
6. Usage                                                   |livepreview-usage|
  - For default configuration (opt.cmd = "LivePreview")|livepreview-usage-for-default-configuration-(opt.cmd-=-"livepreview")|
  - API                                                |livepreview-usage-api|
7. Change log                                         |livepreview-change-log|
8. License                                               |livepreview-license|

==============================================================================
1. Introduction                                     *livepreview-introduction*

live-preview.nvim is a plugin for Neovim that allows you to view Markdown, HTML
(along with CSS, JavaScript) and AsciiDoc files in a web browser with live
updates. No external dependencies or runtime like NodeJS or Python are
required, since the backend is fully written in Lua and Neovim‚Äôs built-in
functions.


==============================================================================
2. Features                                             *livepreview-features*

- Supports markdown, HTML (with reference to CSS, JS), and AsciiDoc files üìÑ
- Support Katex for rendering math equations in markdown and AsciiDoc files üßÆ
- Supports mermaid for rendering diagrams in markdown files üñºÔ∏è
- Syntax highlighting for code blocks in Markdown and AsciiDoc üñçÔ∏è
- Supports sync scrolling in the browser as you scroll in the Markdown files in Neovim. (You need to enable `sync_scroll` in |livepreview-setup|. This feature should be used with brianhuster/autosave.nvim <https://github.com/brianhuster/autosave.nvim>) üîÑ
- Integration with telescope.nvim <https://github.com/nvim-telescope/telescope.nvim> üî≠


==============================================================================
3. Requirements                                     *livepreview-requirements*

- Neovim >=0.10.0 (recommended: >=0.10.1)
- A modern web browser üåê
- PowerShell (only if you use Windows) ü™ü


==============================================================================
4. Installation                                     *livepreview-installation*

You can install this plugin using a plugin manager. Most plugin managers are
supported. Below are some examples

Using lazy.nvim (recommended) üí§ ~

>lua
    require("lazy").setup({
        {
            'brianhuster/live-preview.nvim',
            dependencies = {
                'brianhuster/autosave.nvim'  -- Not required, but recomended for autosaving and sync scrolling
                'nvim-telescope/telescope.nvim' -- Not required, but recommended for integrating with Telescope
            },
            opts = {},
       }
    })
<

mini.deps üì¶ ~

>lua
    MiniDeps.add({
        source = 'brianhuster/live-preview.nvim',
        depends = { 
            'brianhuster/autosave.nvim'  -- Not required, but recomended for autosaving and sync scrolling
            'nvim-telescope/telescope.nvim' -- Not required, but recommended for integrating with Telescope
        }, 
    })
<

rocks.nvim ü™® ~

>vim
    :Rocks install live-preview.nvim
<

vim-plug üîå ~

>vim
    Plug 'brianhuster/live-preview.nvim'
    
    Plug 'nvim-telescope/telescope.nvim' " Not required, but recommended for integrating with Telescope
    
    Plug 'brianhuster/autosave.nvim' " Not required, but recomended for autosaving
<

Native package (without a plugin manager) üì¶ ~

>sh
    git clone --depth 1 https://github.com/brianhuster/live-preview.nvim ~/.local/share/nvim/site/pack/brianhuster/start/live-preview.nvim
<


==============================================================================
5. Setup                                                   *livepreview-setup*

You can customize the plugin by passing a table to the `opts` variable (if you
use lazy.nvim) or the function `require('livepreview').setup()`. Here is the
default configuration:


IN LUA                                              *livepreview-setup-in-lua*

>lua
    {
        cmd = "LivePreview", -- Main command of live-preview.nvim
        port = 5500, -- Port to run the live preview server on.
        autokill = false, -- If true, the plugin will autokill other processes running on the same port (except for Neovim) when starting the server.
        browser = 'default', -- Terminal command to open the browser for live-previewing (eg. 'firefox', 'flatpak run com.vivaldi.Vivaldi'). By default, it will use the default browser.
        dynamic_root = false, -- If true, the plugin will set the root directory to the previewed file's directory. If false, the root directory will be the current working directory (`:lua print(vim.uv.cwd())`).
        sync_scroll = false, -- If true, the plugin will sync the scrolling in the browser as you scroll in the Markdown files in Neovim.
        picker = nil, -- Picker to use for opening files. 3 choices are available: 'telescope', 'fzf-lua', 'mini.pick'. If nil, the plugin look for the first available picker when you call the `pick` command.
    }
<


IN VIMSCRIPT                                  *livepreview-setup-in-vimscript*

>vim
    `call v:lua.require('livepreview').setup({
        \ 'cmd': 'LivePreview', 
        \ 'port': 5500, 
        \ 'autokill': v:false, 
        \ 'browser': 'default', 
        \ 'dynamic_root': v:false, 
        \ 'sync_scroll': v:false, 
        \ 'picker': v:false, 
    \ })
<


==============================================================================
6. Usage                                                   *livepreview-usage*


FOR DEFAULT CONFIGURATION (OPT.CMD = "LIVEPREVIEW")*livepreview-usage-for-default-configuration-(opt.cmd-=-"livepreview")*

- To start the live preview, use the command:

`:LivePreview start`

This command will open the current Markdown or HTML file in your default web
browser and update it live as you write changes to your file.

You can also parse a file path as argument, for example `:LivePreview start
test/doc.md`

- To stop the live preview server, use the command:

`:LivePreview close`

- To open a picker and select a file to preview, use the command:

`:LivePreview pick`

- To see document about each subcommand, use the command:

`:LivePreview help`

This requires a picker to be installed (Telescope, fzf-lua or mini.pick). If
you have multiple pickers installed, you can specify the picker to use by
passing the picker name to the configuration table (see |livepreview-setup|)

Use the command `:help livepreview` to see the help documentation.


API                                                    *livepreview-usage-api*

For API documentation, please refer to |livepreview-api|


==============================================================================
7. Change log                                         *livepreview-change-log*

See |livepreview-changelog|


==============================================================================
8. License                                               *livepreview-license*

This project is licensed under GPL-3.0.

Copyright (C) 2024 Ph·∫°m B√¨nh An

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
